version: "3.9"

services:
  backend:
    container_name: "dialog-service"
    build:
      context: .
    command: "/usr/local/bin/dialog-service --config=/usr/src/app/cmd/dialog/local_config.yaml"
    restart: always
    ports:
      - "8070:8070"
      - "8071:8071"
      - "7050:7050"
    volumes:
      - .:/usr/src/app
    depends_on:
      master-dialog:
        condition: service_healthy
      migrate-dialog:
        condition: service_completed_successfully
      master-second-shard-dialog:
        condition: service_healthy
      migrate-second-shard-dialog:
          condition: service_completed_successfully
    networks:
      - dialog_net
      - social-network_social_network_net
      - counter-service_counter_net
    external_links:
      - backend:backend

  master-dialog:
    image: postgres:latest
    container_name: "master-dialog"
    env_file:
      - .env
    volumes:
      - postgres-dialog-db-master:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dialog-local
      - POSTGRES_NAME=dialog-local
      - POSTGRES_USER=dialog-local-admin
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "7432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - dialog_net
  migrate-dialog:
    image: migrate/migrate
    container_name: "migrate-dialog"
    command: [ "-path", "/migrations", "-database",  "postgresql://dialog-local-admin:eephayl3eaph8Xo@master-dialog:5432/dialog-local?sslmode=disable", "up" ]
    networks:
      - dialog_net
    depends_on:
      master-dialog:
        condition: service_healthy # needful setting which wait available postgres host
    volumes:
      - ./migrations:/migrations


  master-second-shard-dialog:
    image: postgres:latest
    container_name: "master-second-shard-dialog"
    env_file:
      - .env
    volumes:
      - postgres-dialog-db-master-second-shard:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dialog-local
      - POSTGRES_NAME=dialog-local
      - POSTGRES_USER=dialog-local-admin
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "9432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - dialog_net
  migrate-second-shard-dialog:
    image: migrate/migrate
    container_name: "migrate-second-shard-dialog"
    command: [ "-path", "/migrations", "-database",  "postgresql://dialog-local-admin:eephayl3eaph8Xo@master-second-shard-dialog:5432/dialog-local?sslmode=disable", "up" ]
    networks:
      - dialog_net
    depends_on:
      master-second-shard-dialog:
        condition: service_healthy # needful setting which wait available postgres host
    volumes:
      - ./migrations:/migrations

  prometheus:
    image: prom/prometheus:v2.45.6
    container_name: counter-prometheus
    ports:
      - "9090:9090"
#    tmpfs:
#      - /prometheus:mode=1755,size=1g,uid=65534,gid=65534
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./infra/prometheus/alerts.yml:/etc/prometheus/alerts.yml
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - backend
    networks:
      - dialog_net

  grafana:
    image: grafana/grafana:9.5.20
    container_name: counter-grafana
    ports:
      - "3333:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
      - grafana_data:/etc/grafana/provisioning/datasources/
      - grafana_data:/etc/grafana/provisioning/dashboards/
    depends_on:
      - prometheus
    networks:
      - dialog_net

volumes:
  postgres-dialog-db-master:
  postgres-dialog-db-master-second-shard:
  prometheus_data:
  grafana_data:

networks:
  dialog_net:
    driver: bridge
  social-network_social_network_net:
    external: true
  counter-service_counter_net:
    external: true
